stages:
  - dependencies
  - test
  - build
  - deploy

install dependencies:
  stage: dependencies
  image: node:12
  cache:
    key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR
    paths:
      - Backend/node_modules
      - Frontend/node_modules
  script:
    - cd Backend
    - npm ci
    - cd ../Frontend
    - npm ci
  only:
    refs:
      - master
      - merge_requests
    changes:
      - Backend/package-lock.json
      - Frontend/package-lock.json

unit:
  stage: test
  image: node:12
  cache:
    key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR
    paths:
      - Backend/node_modules
    policy: pull
  services:
    - mongo
  script:
    - cd Backend
    - npm run test:ci
    - npm run lint
    - cd ..
  only:
    - master
    - merge_requests

build api:
  services:
    - docker:dind
  stage: build
  image: registry.gitlab.com/ufsec/clubfinity/build-push:latest
  cache:
    key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR
    paths:
      - Backend/node_modules
    policy: pull
  variables:
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - echo $GCLOUD_SERVICE_KEY > /gcloud-service-key.json
    - cat /gcloud-service-key.json
    - /google-cloud-sdk/bin/gcloud auth activate-service-account --key-file /gcloud-service-key.json
    - docker login -u _json_key --password-stdin https://us.gcr.io < /gcloud-service-key.json
  script:
    - docker build Backend/ -t "gcr.io/$PROJECT_ID/clubfinity-api"
    - /google-cloud-sdk/bin/gcloud docker -- push "gcr.io/$PROJECT_ID/clubfinity-api"
  only:
    - master

deploy frontend:
  image: 'patwoz/expo-cli:3'
  stage: deploy
  cache:
    key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR
    paths:
      - Backend/node_modules
    policy: pull
  script:
    - cd Frontend
    - expo login -u $EXPO_USERNAME -p $EXPO_PASSWORD
    - expo publish
  only:
    - master

deploy api:
  image: 'google/cloud-sdk'
  stage: deploy
  script:
    - echo $GCLOUD_SERVICE_KEY > /gcloud-service-key.json
    - gcloud auth activate-service-account --key-file /gcloud-service-key.json
    - gcloud container clusters get-credentials clubfinity-cluster --zone $ZONE --project $PROJECT_ID
    - kubectl rollout restart deployment/clubfinity
  only:
    - master
